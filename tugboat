#!/bin/bash

if [[ "$1" == "update" ]]; then
    mkdir -p /var/tmp/tugboat/$2
    rsync /etc/tugboat/stacks/$2.yml /var/tmp/tugboat/$2/docker-compose.yml

    # Pull the images and store the result in a variable
    pull=$(cd /var/tmp/tugboat/$2/ && docker compose pull 2>&1)
    # Create a variable to check if the pull is complete
    complete='Pull complete'

    # Use the regular expression to check that it has been pulled
    if [[ $pull =~ $complete ]]; then
        echo "Pulled new images, updating $2" >> /var/log/tugboat

        up=$(cd /var/tmp/tugboat/$2 && docker compose up -d 2>&1)
        started="Started"
        running="Running"
        if [[ $up =~ $started ]]; then
            echo "Successfully started stack $2" >> /var/log/tugboat
        elif [[ $up =~ $running ]]; then
            echo "Stack $2 is running" >> /var/log/tugboat
        fi
    else
        echo "$2 is already up to date" >> /var/log/tugboat
        up=$(cd /var/tmp/tugboat/$2 && docker compose up -d 2>&1)
        started="Started"
        running="Running"
        if [[ $up =~ $running ]]; then
            echo "Stack $2 is running" >> /var/log/tugboat
        fi
    fi
elif [[ "$1" == "start" ]]; then
    mkdir -p /var/tmp/tugboat/$2
    rsync /etc/tugboat/stacks/$2.yml /var/tmp/tugboat/$2/docker-compose.yml
    if [[ "$2" == "all" ]]; then
        for stack in */etc/tugboat/stacks/; do
            up=$(cd /var/tmp/tugboat/$stack && docker compose up -d 2>&1)
            started="Started"
            running="Running"
            if [[ $up =~ $started ]]; then
                echo "Successfully started stack $2" >> /var/log/tugboat
            elif [[ $up =~ $running ]]; then
                echo "Stack $2 is running" >> /var/log/tugboat
            fi
        done  
    fi
elif [[ "$1" == "logs" ]]; then
    echo "You are now viewing the logs in real time, press CTRL+C to quit"
    echo
    tail -f /var/log/tugboat
else
    echo "Invalid command"
fi